// <auto-generated />
using System;
using EasyEnglish.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EasyEnglish.Persistence.Migrations
{
    [DbContext(typeof(EasyEnglishDbContext))]
    partial class EasyEnglishDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EasyEnglish.Domain.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CardCollectionId")
                        .HasColumnType("uuid");

                    b.Property<string>("EnWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RuWord")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CardCollectionId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.CardCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CardCollection");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.Card", b =>
                {
                    b.HasOne("EasyEnglish.Domain.Entities.CardCollection", "CardCollection")
                        .WithMany("Cards")
                        .HasForeignKey("CardCollectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CardCollection");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.CardCollection", b =>
                {
                    b.HasOne("EasyEnglish.Domain.Entities.User", "User")
                        .WithMany("CardCollections")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.CardCollection", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("EasyEnglish.Domain.Entities.User", b =>
                {
                    b.Navigation("CardCollections");
                });
#pragma warning restore 612, 618
        }
    }
}
