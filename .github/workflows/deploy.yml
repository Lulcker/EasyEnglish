name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: EasyEnglish/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/easy-english-api:latest
            ${{ secrets.DOCKER_USERNAME }}/easy-english-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: EasyEnglish.UI/Dockerfile
          push: true
          build-args: |
            API_BASE_URL=${{ secrets.API_BASE_URL }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/easy-english-ui:latest
            ${{ secrets.DOCKER_USERNAME }}/easy-english-ui:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Copy docker-compose.yml to server
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "easy-english/"

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd easy-english/

            cat > .env <<EOL
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}
            WEB_BASE_URL=${{ secrets.WEB_BASE_URL }}
            AUTH_KEY=${{ secrets.AUTH_KEY }}
            AUTH_ISSUER=${{ secrets.AUTH_ISSUER }}
            AUTH_AUDIENCE=${{ secrets.AUTH_AUDIENCE }}
            HASH_PEPPER=${{ secrets.HASH_PEPPER }}
            AES_KEY=${{ secrets.AES_KEY }}
            AES_IV=${{ secrets.AES_IV }}
            EMAIL_HOST=${{ secrets.EMAIL_HOST }}
            EMAIL_PORT=${{ secrets.EMAIL_PORT }}
            EMAIL_TO=${{ secrets.EMAIL_TO }}
            EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
            LOKI_URI=${{ secrets.LOKI_URI }}
            EOL
            
            docker compose pull
            docker compose up -d --remove-orphans
            docker image prune -a -f
